---
title: "Example: Optimal Gambling"
categories: 
  - MDP
tags:
  - gambling
  - closed form solution
  - structural result
  - information theory
weight: 12
---

![Image credit: http://commons.wikimedia.org/wiki/File:Gambling-ca-1800.jpg][gambling] 

[gambling]: /stochastic-control/banners/gambling.jpg "How to gamble if you
must" { width=100% }

TL;DR  _This stylized model of optimal gambling was introduced by @Kelly1956
to highlight a relationship between channel capacity (which had been proposed
recently by Shannon), and gambling. Our motivation for studying this model is
to use it as an illustrative example to show that sometimes it is possible to
identify the optimal strategy and value function of MDPs in closed form._

---


Imagine  a gambler who goes to a casino with an initial fortune of $x_1$
dollars and places bets over time and must leave after $T$ bets. Let $X_t$
denote the gambler's fortune after $t$ bets. In this example, time denotes the
number of times that the gambler has bet.

At time $t$, the gambler may place a bet for any amount $U_t$ less than or
equal to his
current fortune $X_t$. If he wins the bet (denoted by the even $W_t = 1$), the
casino gives him the amount that he had bet. If he loses the bet (denoted by
the event $W_t = -1$), he pays the casino the amount that he had bet. Thus,
the dynamics can be written as 

$$ X_{t+1} = X_t + W_t U_t. $$

The outcomes of the bets $\{W_t\}_{t \ge 1}$ are _primitive random variables_,
i.e., they are independent of each other, the gambler's initial fortune, and
his betting strategy. 

The gambler's utility is $\log X_T$, the logarithm of his final fortune.[^1] Thus,
the reward function may be written as

$$ r_t(x, u) = 0 
   \quad \text{and} \quad
   r_T(x) = \log x.
$$

[^1]: See the notes on [risk sensitive utility] for a discussion on the choice of the utility function.

[risk sensitive utility]: ../../risk-sensitive/risk-sensitive-utility

Find the strategy that maximizes the gambler's utility, $\EXP[\log X_T]$. 

# Optimal gambling strategy and value functions

The above model of optimal gambling is a Markov decision process. Therefore,
the optimal solution is given by dynamic programming. 

::: highlight :::
Dynamic program

:   Define the following value function $V_t \colon \reals_{\ge 0} \to \reals$
    $$ V_T(x) = \log x $$
    and for $t \in \{T-1, \dots, 1\}$:
    $$ \begin{align*}
      Q_t(x,u) &= \EXP[ r_t(x,u) + V_{t+1}(X_{t+1}) \,|\, X_t = x, U_t = u] \\
      &= p V_{t+1}(x+u) + (1-p) V_{t+1}(x-u),
      \end{align*}
    $$
    and
    $$ \begin{align*}
      V_t(x) &=  \max_{u \in [0, x]} Q_t(x,u), \\
      g_t(x) &= \arg \max_{u \in [0, x]} Q_t(x,u). \\
      \end{align*}
    $$

    Then the strategy $g = (g_1, \dots, g_{T-1})$ is optimal.
:::

The above model is one of the rare instances when the optimal strategy and
the optimal strategy and value function of an MDP can be identified in
closed form.

::: highlight :::
Theorem 

:   When $p \le 0.5$:

    - the optimal strategy is to _not gamble_, specifically $g_t(x) = 0$;
    - the value function is $V_t(x) = \log x$. 

    When $p > 0.5$:

    - the optimal strategy is _to bet a fraction of the current fortune_,
      specifically $g_t(x) = (2p - 1)x$;
    - the value function is $V_t(x) = \log x + (T - t) C$, where[^C]
      $$ C = \log 2 + p \log p + (1-p) \log (1-p).$$
:::

[^C]: The constant $C$ defined above is equal to the capacity of a binary
  symmetric channel! In fact, the above model was introduced by @Kelly1956 to
  show a gambling interpretation of information rates. 

We prove the two cases separately. 

#### Proof when $p \le 0.5$ {-}

Let $p = \PR(W_t = 1)$ and $q = \PR(W_t = -1)$. Then $p \le 0.5$ implies that
$p \le 1 - p = q$. 

We proceed by backward induction. For $t = T$, we have that $V_T(x) = \log x$.
This forms the basis of induction. Now assume that for $t+1$, $V_{t+1}(x) =
\log x$. Now consider

$$ Q_t(x,u) = p V_{t+1}(x+u) + qV_{t+1}(x-u). $$

Differentiating both sides w.r.t. $u$, we get
$$ \begin{align*} 
  \frac { \partial Q_t(x,u) } {\partial u} &= 
   \frac p { x + u} - \frac q { x - u } 
   \\
   & = \frac { (p - q) x - (p + q) u } { x^2 - u^2 } 
   \\
   & =
   \frac { - (q - p) x - u } {x^2 - u^2 } 
   \\
   &< 0.
  \end{align*}   
$$

This implies that $Q_t(x,u)$ is decreasing in $u$. Therefore,

$$ g_t(x) = \arg\max_{u \in [0, x]} Q_t(x,u) = 0. $$

Moreover,
$$ V_t(x) = Q_t(x, g_t(x)) = \log x.$$

This completes the induction step. 

#### Proof when $p > 0.5$ {-}

As in the previous case, let $p = \PR(W_t = 1)$ and $q = \PR(W_t = -1)$. Then
$p > 0.5$ implies that $p > 1 - p = q$. 

We proceed by backward induction. For $t = T$, we have that $V_T(x) = \log x$.
This forms the basis of induction. Now assume that for $t+1$, $V_{t+1}(x) =
\log x + (T -t - 1)C$. Now consider

$$ Q_t(x,u) = p V_{t+1}(x+u) + qV_{t+1}(x-u). $$

Differentiating both sides w.r.t. $u$, we get
$$ \begin{align*} 
  \frac { \partial Q_t(x,u) } {\partial u} &= 
   \frac p { x + u} - \frac q { x - u } 
   \\
   & = \frac { (p - q) x - (p + q) u } { x^2 - u^2 } 
   \\
   & =
   \frac { (p - q) x - u } {x^2 - u^2 } 
  \end{align*}   
$$

Setting $\partial Q_t(x,u)/\partial u = 0$, we get that the optimal action is

$$ g_t(x) = (p-q) x. $$

Note that $(p-q) \in (0,1]$ 

$$ 
  \frac { \partial^2 Q_t(x,u) } {\partial u^2} = 
   - \frac p { (x + u)^2 } - \frac q { (x - u)^2 } 
  < 0;
$$
hence the above action is indeed the maximizer. 
Moreover,
$$ \begin{align*} 
  V_t(x) &= Q_t(x, g_t(x))  \\
  &= p V_{t+1}(x + g_t(x)) + q V_{t+1}( x - g_t(x) )\\
  &= \log x + p \log (1 + (p-q)) + q \log (1 - (p-q)) + (T - t -1)C \\
  &= \log x + p \log 2p + q \log 2q + (T - t + 1)C \\
  &= \log x + (T - t) C
  \end{align*}   
$$

This completes the induction step. 

# Generalized model

Suppose that the terminal reward $r_T(x)$ is monotone increasing[^increasing] in $x$.

[^increasing]: I use the convention that _increasing_ means _weakly
  increasing_. The alternative term _non-decreasing_ implicitly assumes that
  we are talking about a totally ordered set. 

<div class="highlight">
Theorem

:   For the generalized optimal gambling problem:

    - For each $t$, the value function $V_t(x)$ is monotone increasing in $x$.
    - For each $x$, the value function $V_t(x)$ is monotone decreasing in $t$.

</div>

#### Proof of monotonicity in $x$ {-}

We proceed by backward induction. $V_T(x) = r_T(x)$ which is monotone
increasing in $x$. Assume that $V_{t+1}(x)$ is increasing in $x$. Now,
consider $V_t(x)$. Consider $x_1, x_2 \in \reals_{\ge 0}$ such that $x_1 \le
x_2$. Then for any $u \le x_1$, we have that

$$ \begin{align*}
    Q_t(x_1, u) &= p V_{t+1}(x_1+u) + q V_{t+1}(x_1-u) \\
    & \stackrel{(a)}{\le} p V_{t+1}(x_2 + u) + q V_{t+1}(x_2  - u) \\
    & = Q_t(x_2, u),
  \end{align*}
$$
where $(a)$ uses the induction hypothesis. Now consider

$$ \begin{align*}
  V_t(x_1) &= \max_{u \in [0, x_1]} Q_t(x_1, u) \\
  & \stackrel{(b)}{\le} \max_{u \in [0, x_1]} Q_t(x_2, u) \\
  & \le \max_{u \in [0, x_2]} Q_t(x_2, u) \\
  &= V_t(x_2),
  \end{align*}
$$
where $(b)$ uses monotonicity of $Q_t$ in $x$. This completes the induction
step. 

#### Proof of monotonicity in $t$ {-}

This is a simple consequence of the following:

$$V_t(x) = \max_{u \in [0, x]} Q_t(x,u) \ge Q_t(x,0) = V_{t+1}(x).$$ 

# Exercises {-}

The purpose of these series of exercises is to generalize the basic result to
a model where the gambler can bet on many mutually exclusive outcomes (think
of betting on multiple horses in a horse race). 

1. Given positive numbers $(p_1, \dots, p_n)$, consider the following
   constraint optimization problem:
   $$\max \sum_{i=1}^n p_i \log w_i$$
   subject to:

     * $w_i \ge 0$
     * $\sum_{i=1}^n w_i \le x$.

     Show that the optimal solution is given by
     $$ w_i = \frac{p_i}{p} x$$
     where $p = \sum_{i=1}^n p_i$. 

2. Given positive numbers $(p_1, \dots, p_n)$, consider the following
   constraint optimization problem:
   $$\max \sum_{i=1}^n p_i \log (x - u + nu_i)$$
   subject to:

     * $u_i \ge 0$
     * $u = \sum_{i=1}^n u_i \le x$.

     Show that the optimal solution is given by
     $$ u_i = \frac{p_i}{p} x$$
     where $p = \sum_{i=1}^n p_i$. 

3.  Consider an alternative of the optimal gambling problem where, at each
    time, the gambler can place bets on many mutually exclusive outcomes.
    Suppose there are $n$ outcomes, with success probabilities $(p_1, \dots,
    p_n)$. Let $(U_{1,t}, \dots, U_{n,t})$ denote the amount that the gambler
    bets on each outcome. The total amount $U_t := \sum_{i=1}^n U_{i,t}$
    must be less than the gambler's fortune $X_t$. If $W_t$ denotes the
    winning outcome, then the gambler's wealth evolves according to
    $$ X_{t+1} = X_t - U_t + nU_{W_t, t}.$$
    For example, if there are three outcomes, gambler's current wealth is
    $x$, the gambler bets $(u_1, u_2,
    u_3)$, and outcome 2 wins, then the gambler wins $3 u_2$ and his fortune
    at the next time is
    $$ x - (u_1 + u_2 + u_3) + 3 u_2. $$
    
    The gambler's utility is $\log X_T$, the logarithm of his final
    wealth. Find the strategy that maximizes the gambler's expected utility. 

      _Hint:_ Argue that the value function is of the form $V_t(x) = \log x +
      (T -t)C$, where
      $$C = \log n - H(p_1, \dots, p_n)$$
      where $H(p_1, \dots, p_n) = - \sum_{i=1}^n p_i \log p_i$ is the entropy
      of a random variable with pmf $(p_1, \dots, p_n)$. 

      Side Remark

      : The constant $C$ is the capacity of a symmetric discrete memoryless
        with $n$ outputs and for every input, the output probabilities are a
        permutation of $(p_1, \dots, p_n)$. 

# References {-}

The above model (including the model described in the exercise) was introduced
by @Kelly1956. However, Kelly restricted attention to “bet a constant fraction
of your fortune” betting strategy and found the optimal fraction. This
strategy is sometimes referred to as [Kelly criteria]. As far as I know, the
dynamic programming treatment of the problem is due to @Ross1974. Ross also
considered variations where the objective was to maximize the probability of
reaching a preassigned fortune or maximizing the time until becoming broke. 

A generalization of the above model to general logarithmic and exponential
utilities is presented in @Fergurson2004.

[Kelly criteria]: https://en.wikipedia.org/wiki/Kelly_criterion

--- 
